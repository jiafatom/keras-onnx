# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

jobs:

- job: 'Test'
  pool:
    vmImage: 'vs2017-win2016'
  strategy:
    matrix:
      # No python 2.x since no available ONNX package for Windows
      # Python27:
      #   python.version: '2.7'
      Python35:
        python.version: '3.5'
        ONNX_PATH: onnx==1.2.3
        KERAS: keras==2.1.6

      Python36:
        python.version: '3.6'
        ONNX_PATH: onnx==1.3.0
        KERAS: keras

    maxParallel: 3

  steps:
  - task: CondaEnvironment@1
    inputs:
      createCustomEnvironment: true
      environmentName: 'py$(python.version)'
      packageSpecs: 'python=$(python.version)'

  - script: |
      conda install -y -c conda-forge protobuf numpy
      python -m pip install --upgrade pip
      pip install -r requirements-dev.txt
      test '$(python.version)' != '2.7' && pip install onnxruntime
      pip install %KERAS%
    displayName: 'Install dependencies'

  - script: |
      pip install -e .
      test '$(python.version)' != '2.7' && python -c "import onnxruntime"
      pytest tests --doctest-modules --junitxml=junit/test-results.xml
    displayName: 'pytest'

  - task: PublishTestResults@2
    inputs:
      testResultsFiles: '**/test-results.xml'
      testRunTitle: 'Python $(python.version)'
    condition: succeededOrFailed()
